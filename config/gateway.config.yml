http:
  port: ${PORT_HTTP:-8080}
  hostname: '0.0.0.0'
https:
  port: ${PORT_HTTPS:-443}
  hostname: '0.0.0.0'
  tls:
    ${API_IOT_HOSTNAME}:
      key: ${SSL_IOT_KEY_PATH}
      cert: ${SSL_IOT_CERT_PATH}
      ca:
        - ${SSL_IOT_CA_PATH}
    "default":
      key: ${SSL_KEY_PATH}
      cert: ${SSL_CERT_PATH}
  options:
    requestCert: true
    rejectUnauthorized: false

apiEndpoints:
  ## ACCOUNT ENDPOINTS ##
  accountPublicApi:
    ### AUTH ###
    - host: '*'
      paths: [ '/v1/auth' ]
      methods: [ 'POST' ]

  ## IoT DEVICES ENDPOINTS ##
  iotPrivateApi:
    - host: ${API_IOT_HOSTNAME}
      paths:
        - '/v1/institutions/:institution_id/environments'
        - '/v1/children/:username/nfc'
        - '/v1/children/:username/weights'
        - '/v1/children/nfc/:nfc_tag/weights'
      methods: [ "POST" ]

    - host: ${API_IOT_HOSTNAME}
      paths:
        - '/v1/children/:username'
      methods: [ 'HEAD' ]

    - host: ${API_IOT_HOSTNAME}
      paths:
        - '/v1/children/nfc/:nfc_tag'
      methods: [ 'GET' ]

    - host: ${API_IOT_HOSTNAME}
      paths:
        - '/v1/children/:username/nfc'
      methods: [ 'DELETE' ]

  ## IoT DEVICES ENDPOINTS ##
  iotRenewCertPrivateApi:
    - host: ${API_IOT_HOSTNAME}
      paths:
        - '/v1/institutions/:institution_id/devices/:device_id/pki/renew'
      methods: [ "POST" ]

  devicePrivateApi:
    - host: '*'
      paths:
        - '/v1/institutions/:institution_id/devices/:device_id/pki'
        - '/v1/institutions/:institution_id/devices'
      methods: [ "POST" ]
      scopes: [ 'devices:create' ]

    - host: '*'
      paths:
        - '/v1/institutions/:institution_id/devices'
        - '/v1/institutions/:institution_id/devices/:device_id'
      methods: [ "GET" ]
      scopes: [ 'devices:read' ]

    - host: '*'
      paths:
        - '/v1/institutions/:institution_id/devices/:device_id/pki'
        - '/v1/institutions/:institution_id/devices/:device_id'
      methods: [ "DELETE" ]
      scopes: [ 'devices:delete' ]

  ## ACTIVITY TRACKING ENDPOINTS ##
  activityPrivateApi:
    ### USERS.CHILDREN.PHYSICALACTIVITIES ###
    - host: '*'
      paths:
        - '/v1/children/:child_id/physicalactivities'
      methods: [ "POST" ]
      scopes: [ 'physicalactivities:create' ]

    - host: '*'
      paths:
        - '/v1/children/:child_id/physicalactivities'
        - '/v1/children/:child_id/physicalactivities/:physicalactivity_id'
      methods: [ "GET" ]
      scopes: [ 'physicalactivities:read' ]

    - host: '*'
      paths: [ '/v1/children/:child_id/physicalactivities/:physicalactivity_id' ]
      methods: [ "PATCH" ]
      scopes: [ 'physicalactivities:update' ]

    - host: '*'
      paths: [ '/v1/children/:child_id/physicalactivities/:physicalactivity_id' ]
      methods: [ "DELETE" ]
      scopes: [ 'physicalactivities:delete' ]

    ### USERS.CHILDREN.LOGS ###
    - host: '*'
      paths: [ '/v1/children/:child_id/logs/date/:date_start/:date_end' ]
      methods: [ "GET" ]
      scopes: [ 'physicalactivities:read' ]

    - host: '*'
      paths: [ '/v1/children/:child_id/logs/:resource/date/:date_start/:date_end' ]
      methods: [ "GET" ]
      scopes: [ 'physicalactivities:read' ]

    - host: '*'
      paths: [ '/v1/children/:child_id/logs/:resource' ]
      methods: [ "POST" ]
      scopes: [ 'physicalactivities:create' ]

    ### USERS.CHILDREN.SLEEP ###
    - host: '*'
      paths: [ '/v1/children/:child_id/sleep' ]
      methods: [ "POST" ]
      scopes: [ 'sleep:create' ]

    - host: '*'
      paths:
        - '/v1/children/:child_id/sleep'
        - '/v1/children/:child_id/sleep/:sleep_id'
      methods: [ "GET" ]
      scopes: [ 'sleep:read' ]

    - host: '*'
      paths: [ '/v1/children/:child_id/sleep/:sleep_id' ]
      methods: [ "PATCH" ]
      scopes: [ 'sleep:update' ]

    - host: '*'
      paths: [ '/v1/children/:child_id/sleep/:sleep_id' ]
      methods: [ "DELETE" ]
      scopes: [ 'sleep:delete' ]

    ### USERS.CHILDREN.WEIGHT / USERS.CHILDREN.BODYFAT ###
    - host: ${API_GATEWAY_HOSTNAME}
      paths:
        - '/v1/children/:child_id/weights'
        - '/v1/children/:child_id/bodyfats'
      methods: [ "POST" ]
      scopes: [ 'measurements:create' ]

    - host: '*'
      paths:
        - '/v1/children/:child_id/weights'
        - '/v1/children/:child_id/bodyfats'
      methods: [ "GET" ]
      scopes: [ 'measurements:read' ]

    - host: '*'
      paths:
        - '/v1/children/:child_id/weights/:weight_id'
        - '/v1/children/:child_id/bodyfats/:bodyfat_id'
      methods: [ "GET" ]
      scopes: [ 'measurements:read' ]

    - host: '*'
      paths:
        - '/v1/children/:child_id/weights/:weight_id'
        - '/v1/children/:child_id/bodyfats/:bodyfat_id'
      methods: [ "DELETE" ]
      scopes: [ 'measurements:delete' ]

  ## ENVIRONMENT ENDPOINTS ##
  environmentPrivateAPI:
    - host: ${API_GATEWAY_HOSTNAME}
      paths: [ '/v1/institutions/:institution_id/environments' ]
      methods: [ "POST" ]
      scopes: [ 'environment:create' ]

    - host: '*'
      paths: [ '/v1/institutions/:institution_id/environments' ]
      methods: [ "GET" ]
      scopes: [ 'environment:read' ]

    - host: '*'
      paths: [ '/v1/institutions/:institution_id/environments' ]
      methods: [ "DELETE" ]
      scopes: [ 'environment:delete' ]

    - host: '*'
      paths: [ '/v1/institutions/:institution_id/environments/:environment_id' ]
      methods: [ "DELETE" ]
      scopes: [ 'environment:delete' ]

  accountPrivateApi:
    ### USERS ###
    - host: '*'
      paths: [ '/v1/users/:user_id' ]
      methods: [ 'DELETE' ]
      scopes: [ 'users:delete' ]

    - host: '*'
      paths: [ '/v1/users/:user_id/password' ]
      methods: [ 'PUT' ]
      scopes: [ 'applications:update', 'children:update', 'educators:update', 'families:update', 'healthprofessionals:update' ]

    - host: '*'
      paths: [ '/v1/users/:user_id/reset-password' ]
      methods: [ 'POST' ]
      scopes: [ 'users:resetPassword' ]

    ### USERS.CHILDREN ###
    - host: '*'
      paths: [ '/v1/children' ]
      methods: [ 'POST' ]
      scopes: [ 'children:create' ]

    - host: '*'
      paths: [ '/v1/children' ]
      methods: [ 'GET' ]
      scopes: [ 'children:readAll' ]

    - host: ${API_GATEWAY_HOSTNAME}
      paths:
        - '/v1/children/:child_id'
        - '/v1/children/nfc/:nfc_tag'
      methods: [ 'GET' ]
      scopes: [ 'children:read' ]

    - host: '*'
      paths: [ '/v1/children/:child_id' ]
      methods: [ 'PATCH' ]
      scopes: [ 'children:update' ]

    #    - host: '*' // Endpoint removed, as it is being handled on the iot host
    #      paths: [ '/v1/children/:child_id/nfc' ]
    #      methods: [ 'POST' ]
    #      scopes: [ 'children:update' ]

    ### USERS.EDUCATORS ###
    - host: '*'
      paths: [ '/v1/educators' ]
      methods: [ 'POST' ]
      scopes: [ 'educators:create' ]

    - host: '*'
      paths: [ '/v1/educators' ]
      methods: [ 'GET' ]
      scopes: [ 'educators:readAll' ]

    - host: '*'
      paths: [ '/v1/educators/:educator_id' ]
      methods: [ 'GET' ]
      scopes: [ 'educators:read' ]

    - host: '*'
      paths: [ '/v1/educators/:educator_id' ]
      methods: [ 'PATCH' ]
      scopes: [ 'educators:update' ]

    ### USERS.FAMILIES || USERS.FAMILIES.CHILDREN ###
    - host: '*'
      paths: [ '/v1/families', '/v1/families/:family_id/children/:child_id' ]
      methods: [ 'POST' ]
      scopes: [ 'families:create' ]

    - host: '*'
      paths: [ '/v1/families' ]
      methods: [ 'GET' ]
      scopes: [ 'families:readAll' ]

    - host: '*'
      paths: [ '/v1/families/:family_id', '/v1/families/:family_id/children' ]
      methods: [ 'GET' ]
      scopes: [ 'families:read' ]

    - host: '*'
      paths: [ '/v1/families/:family_id' ]
      methods: [ 'PATCH' ]
      scopes: [ 'families:update' ]

    - host: '*'
      paths:
        - '/v1/families/:family_id/children/:child_id'
      methods: [ 'DELETE' ]
      scopes: [ 'families:delete' ]

    ### USERS.HEALTHPROFESSIONALS ###
    - host: '*'
      paths: [ '/v1/healthprofessionals' ]
      methods: [ 'POST' ]
      scopes: [ 'healthprofessionals:create' ]

    - host: '*'
      paths: [ '/v1/healthprofessionals' ]
      methods: [ 'GET' ]
      scopes: [ 'healthprofessionals:readAll' ]

    - host: '*'
      paths: [ '/v1/healthprofessionals/:healthprofessional_id' ]
      methods: [ 'GET' ]
      scopes: [ 'healthprofessionals:read' ]

    - host: '*'
      paths: [ '/v1/healthprofessionals/:healthprofessional_id' ]
      methods: [ 'PATCH' ]
      scopes: [ 'healthprofessionals:update' ]

    ### USERS.EDUCATORS.CHILDREN.GROUPS || USERS.HEALTHPROFESSIONALS.CHILDREN.GROUPS ###
    - host: '*'
      paths:
        - '/v1/educators/:educator_id/children/groups'
        - '/v1/healthprofessionals/:healthprofessional_id/children/groups'
      methods: [ 'POST' ]
      scopes: [ 'childrengroups:create' ]

    - host: '*'
      paths:
        - '/v1/educators/:educator_id/children/groups'
        - '/v1/educators/:educator_id/children/groups/:group_id'
        - '/v1/healthprofessionals/:healthprofessional_id/children/groups'
        - '/v1/healthprofessionals/:healthprofessional_id/children/groups/:group_id'
      methods: [ 'GET' ]
      scopes: [ 'childrengroups:read' ]

    - host: '*'
      paths:
        - '/v1/educators/:educator_id/children/groups/:group_id'
        - '/v1/healthprofessionals/:healthprofessional_id/children/groups/:group_id'
      methods: [ 'PATCH' ]
      scopes: [ 'childrengroups:update' ]

    - host: '*'
      paths:
        - '/v1/educators/:educator_id/children/groups/:group_id'
        - '/v1/healthprofessionals/:healthprofessional_id/children/groups/:group_id'
      methods: [ 'DELETE' ]
      scopes: [ 'childrengroups:delete' ]

    ### USERS.APPLICATIONS ###
    - host: '*'
      paths: [ '/v1/applications' ]
      methods: [ 'POST' ]
      scopes: [ 'applications:create' ]

    - host: '*'
      paths: [ '/v1/applications' ]
      methods: [ 'GET' ]
      scopes: [ 'applications:readAll' ]

    - host: '*'
      paths: [ '/v1/applications/:application_id' ]
      methods: [ 'GET' ]
      scopes: [ 'applications:read' ]

    - host: '*'
      paths: [ '/v1/applications/:application_id' ]
      methods: [ 'PATCH' ]
      scopes: [ 'applications:update' ]

    ### INSTITUTIONS ###
    - host: '*'
      paths: [ '/v1/institutions' ]
      methods: [ 'POST' ]
      scopes: [ 'institutions:create' ]

    - host: '*'
      paths: [ '/v1/institutions' ]
      methods: [ 'GET' ]
      scopes: [ 'institutions:readAll' ]

    - host: '*'
      paths: [ '/v1/institutions/:institution_id' ]
      methods: [ 'GET' ]
      scopes: [ 'institutions:read' ]

    - host: '*'
      paths: [ '/v1/institutions/:institution_id' ]
      methods: [ 'PATCH' ]
      scopes: [ 'institutions:update' ]

    - host: '*'
      paths: [ '/v1/institutions/:institution_id' ]
      methods: [ 'DELETE' ]
      scopes: [ 'institutions:delete' ]

  ## DATA SYNC AGENT ENDPOINTS ##
  dsAgentPrivateApi:
    ### FITBIT ###
    - host: '*'
      paths: [ '/v1/fitbit' ]
      methods: [ 'GET' ]
      scopes: [ 'external:sync' ]

    ### USERS.FITBIT.AUTH ###
    - host: '*'
      paths: [ '/v1/users/:user_id/fitbit/auth' ]
      methods: [ 'POST', 'GET' ]
      scopes: [ 'external:sync' ]

    - host: '*'
      paths: [ '/v1/users/:user_id/fitbit/auth/revoke' ]
      methods: [ 'POST' ]
      scopes: [ 'external:sync' ]

  dsAgentFitbitSyncPrivateApi:
    ### USERS.FITBIT.SYNC ###
    - host: '*'
      paths: [ '/v1/users/:user_id/fitbit/sync' ]
      methods: [ 'POST' ]
      scopes: [ 'external:sync' ]

  ## FOOD TRACKING AND QUESTIONNAIRE ENDPOINTS ##
  questionnairesPrivateAPI:
    ### Q1SOCIODEMOGRAPHIC ###
    - host: '*'
      paths:
        - '/v1/q1sociodemographics'
        - '/v1/q1sociodemographics/:id'
        - '/v1/q1sociodemographics/count'
      methods: [ "GET" ]
      scopes: [ 'socioquest:read' ]

    - host: '*'
      paths: [ '/v1/q1sociodemographics/:id' ]
      methods: [ "PUT", "PATCH" ]
      scopes: [ 'socioquest:update' ]

    - host: '*'
      paths: [ '/v1/q1sociodemographics/:id' ]
      methods: [ "DELETE" ]
      scopes: [ 'socioquest:delete' ]

    - host: '*'
      paths: [ '/v1/q1sociodemographics' ]
      methods: [ "POST" ]
      scopes: [ 'socioquest:create' ]

    - host: '*'
      paths: [ '/v1/q1sociodemographics' ]
      methods: [ "PATCH" ]
      scopes: [ 'socioquest:update' ]

    ### Q21CHILDSHEALTHCONDITIONS ###
    - host: '*'
      paths:
        - '/v1/q21childshealthconditions'
        - '/v1/q21childshealthconditions/:id'
        - '/v1/q21childshealthconditions/count'
      methods: [ "GET" ]
      scopes: [ 'healthquest:read' ]

    - host: '*'
      paths: [ '/v1/q21childshealthconditions/:id' ]
      methods: [ "PUT", "PATCH" ]
      scopes: [ 'healthquest:update' ]

    - host: '*'
      paths: [ '/v1/q21childshealthconditions/:id' ]
      methods: [ "DELETE" ]
      scopes: [ 'healthquest:delete' ]

    - host: '*'
      paths: [ '/v1/q21childshealthconditions' ]
      methods: [ "POST" ]
      scopes: [ 'healthquest:create' ]

    - host: '*'
      paths: [ '/v1/q21childshealthconditions' ]
      methods: [ "PATCH" ]
      scopes: [ 'healthquest:update' ]

    ### Q22PARENTSHEALTHCONDITIONS ###
    - host: '*'
      paths:
        - '/v1/q22parentshealthconditions'
        - '/v1/q22parentshealthconditions/:id'
        - '/v1/q22parentshealthconditions/count'
      methods: [ "GET" ]
      scopes: [ 'healthquest:read' ]

    - host: '*'
      paths: [ '/v1/q22parentshealthconditions/:id' ]
      methods: [ "PUT", "PATCH" ]
      scopes: [ 'healthquest:update' ]

    - host: '*'
      paths: [ '/v1/q22parentshealthconditions/:id' ]
      methods: [ "DELETE" ]
      scopes: [ 'healthquest:delete' ]

    - host: '*'
      paths: [ '/v1/q22parentshealthconditions' ]
      methods: [ "POST" ]
      scopes: [ 'healthquest:create' ]

    - host: '*'
      paths: [ '/v1/q22parentshealthconditions' ]
      methods: [ "PATCH" ]
      scopes: [ 'healthquest:update' ]

    ### Q23IPAQ ###
    - host: '*'
      paths:
        - '/v1/q23ipaq'
        - '/v1/q23ipaq/:id'
        - '/v1/q23ipaq/count'
      methods: [ "GET" ]
      scopes: [ 'parentphyquest:read' ]

    - host: '*'
      paths: [ '/v1/q23ipaq/:id' ]
      methods: [ "PUT", "PATCH" ]
      scopes: [ 'parentphyquest:update' ]

    - host: '*'
      paths: [ '/v1/q23ipaq/:id' ]
      methods: [ "DELETE" ]
      scopes: [ 'parentphyquest:delete' ]

    - host: '*'
      paths: [ '/v1/q23ipaq' ]
      methods: [ "POST" ]
      scopes: [ 'parentphyquest:create' ]

    - host: '*'
      paths: [ '/v1/q23ipaq' ]
      methods: [ "PATCH" ]
      scopes: [ 'parentphyquest:update' ]

    ### Q3PHYSICALANTHROPOMETRICMEASURES ###
    - host: '*'
      paths:
        - '/v1/q3physicalandanthropometricmeasures'
        - '/v1/q3physicalandanthropometricmeasures/:id'
        - '/v1/q3physicalandanthropometricmeasures/count'
      methods: [ "GET" ]
      scopes: [ 'childrenphyquest:read' ]

    - host: '*'
      paths: [ '/v1/q3physicalandanthropometricmeasures/:id' ]
      methods: [ "PUT", "PATCH" ]
      scopes: [ 'childrenphyquest:update' ]

    - host: '*'
      paths: [ '/v1/q3physicalandanthropometricmeasures/:id' ]
      methods: [ "DELETE" ]
      scopes: [ 'childrenphyquest:delete' ]

    - host: '*'
      paths: [ '/v1/q3physicalandanthropometricmeasures' ]
      methods: [ "POST" ]
      scopes: [ 'childrenphyquest:create' ]

    - host: '*'
      paths: [ '/v1/q3physicalandanthropometricmeasures' ]
      methods: [ "PATCH" ]
      scopes: [ 'childrenphyquest:update' ]

    ### Q401FOODFREQUENCY ###
    - host: '*'
      paths:
        - '/v1/q401ffq'
        - '/v1/q401ffq/:id'
        - '/v1/q401ffq/count'
      methods: [ "GET" ]
      scopes: [ 'habitsquest:read' ]

    - host: '*'
      paths: [ '/v1/q401ffq/:id' ]
      methods: [ "PUT", "PATCH" ]
      scopes: [ 'habitsquest:update' ]

    - host: '*'
      paths: [ '/v1/q401ffq/:id' ]
      methods: [ "DELETE" ]
      scopes: [ 'habitsquest:delete' ]

    - host: '*'
      paths: [ '/v1/q401ffq' ]
      methods: [ "POST" ]
      scopes: [ 'habitsquest:create' ]

    - host: '*'
      paths: [ '/v1/q401ffq' ]
      methods: [ "PATCH" ]
      scopes: [ 'habitsquest:update' ]

    ### Q402FOODHABITSANDFEEDINGBEHAVIOURS ###
    - host: '*'
      paths:
        - '/v1/q402foodhabitsandfeedingbehaviors'
        - '/v1/q402foodhabitsandfeedingbehaviors/:id'
        - '/v1/q402foodhabitsandfeedingbehaviors/count'
      methods: [ "GET" ]
      scopes: [ 'habitsquest:read' ]

    - host: '*'
      paths: [ '/v1/q402foodhabitsandfeedingbehaviors/:id' ]
      methods: [ "PUT", "PATCH" ]
      scopes: [ 'habitsquest:update' ]

    - host: '*'
      paths: [ '/v1/q402foodhabitsandfeedingbehaviors/:id' ]
      methods: [ "DELETE" ]
      scopes: [ 'habitsquest:delete' ]

    - host: '*'
      paths: [ '/v1/q402foodhabitsandfeedingbehaviors' ]
      methods: [ "POST" ]
      scopes: [ 'habitsquest:create' ]

    - host: '*'
      paths: [ '/v1/q402foodhabitsandfeedingbehaviors' ]
      methods: [ "PATCH" ]
      scopes: [ 'habitsquest:update' ]

    ### Q501PHYSICALACTIVITYFORCHILDREN ###
    - host: '*'
      paths:
        - '/v1/q501physicalactivityforchildren'
        - '/v1/q501physicalactivityforchildren/:id'
        - '/v1/q501physicalactivityforchildren/count'
      methods: [ "GET" ]
      scopes: [ 'habitsquest:read' ]

    - host: '*'
      paths: [ '/v1/q501physicalactivityforchildren/:id' ]
      methods: [ "PUT", "PATCH" ]
      scopes: [ 'habitsquest:update' ]

    - host: '*'
      paths: [ '/v1/q501physicalactivityforchildren/:id' ]
      methods: [ "DELETE" ]
      scopes: [ 'habitsquest:delete' ]

    - host: '*'
      paths: [ '/v1/q501physicalactivityforchildren' ]
      methods: [ "POST" ]
      scopes: [ 'habitsquest:create' ]

    - host: '*'
      paths: [ '/v1/q501physicalactivityforchildren' ]
      methods: [ "PATCH" ]
      scopes: [ 'habitsquest:update' ]

    ### Q502PHYSICALACTIVITYANDSEDENTARYHABITS ###
    - host: '*'
      paths:
        - '/v1/q502physicalactivityandsedentaryhabits'
        - '/v1/q502physicalactivityandsedentaryhabits/:id'
        - '/v1/q502physicalactivityandsedentaryhabits/count'
      methods: [ "GET" ]
      scopes: [ 'habitsquest:read' ]

    - host: '*'
      paths: [ '/v1/q502physicalactivityandsedentaryhabits/:id' ]
      methods: [ "PUT", "PATCH" ]
      scopes: [ 'habitsquest:update' ]

    - host: '*'
      paths: [ '/v1/q502physicalactivityandsedentaryhabits/:id' ]
      methods: [ "DELETE" ]
      scopes: [ 'habitsquest:delete' ]

    - host: '*'
      paths: [ '/v1/q502physicalactivityandsedentaryhabits' ]
      methods: [ "POST" ]
      scopes: [ 'habitsquest:create' ]

    - host: '*'
      paths: [ '/v1/q502physicalactivityandsedentaryhabits' ]
      methods: [ "PATCH" ]
      scopes: [ 'habitsquest:update' ]

    ### Q503SLEEPINGHABITS ###
    - host: '*'
      paths:
        - '/v1/q503sleepinghabits'
        - '/v1/q503sleepinghabits/:id'
        - '/v1/q503sleepinghabits/count'
      methods: [ "GET" ]
      scopes: [ 'habitsquest:read' ]

    - host: '*'
      paths: [ '/v1/q503sleepinghabits/:id' ]
      methods: [ "PUT", "PATCH" ]
      scopes: [ 'habitsquest:update' ]

    - host: '*'
      paths: [ '/v1/q503sleepinghabits/:id' ]
      methods: [ "DELETE" ]
      scopes: [ 'habitsquest:delete' ]

    - host: '*'
      paths: [ '/v1/q503sleepinghabits' ]
      methods: [ "POST" ]
      scopes: [ 'habitsquest:create' ]

    - host: '*'
      paths: [ '/v1/q503sleepinghabits' ]
      methods: [ "PATCH" ]
      scopes: [ 'habitsquest:update' ]

    ### Q601CHILDEATINGBEHAVIOUR ###
    - host: '*'
      paths:
        - '/v1/q601childeatingbehaviour'
        - '/v1/q601childeatingbehaviour/:id'
        - '/v1/q601childeatingbehaviour/count'
      methods: [ "GET" ]
      scopes: [ 'habitsquest:read' ]

    - host: '*'
      paths: [ '/v1/q601childeatingbehaviour/:id' ]
      methods: [ "PUT", "PATCH" ]
      scopes: [ 'habitsquest:update' ]

    - host: '*'
      paths: [ '/v1/q601childeatingbehaviour/:id' ]
      methods: [ "DELETE" ]
      scopes: [ 'habitsquest:delete' ]

    - host: '*'
      paths: [ '/v1/q601childeatingbehaviour' ]
      methods: [ "POST" ]
      scopes: [ 'habitsquest:create' ]

    - host: '*'
      paths: [ '/v1/q601childeatingbehaviour' ]
      methods: [ "PATCH" ]
      scopes: [ 'habitsquest:update' ]

    ### Q602AUTOPERCEPTION ###
    - host: '*'
      paths:
        - '/v1/q602autoperception'
        - '/v1/q602autoperception/:id'
        - '/v1/q602autoperception/count'
      methods: [ "GET" ]
      scopes: [ 'perceptionquest:read' ]

    - host: '*'
      paths: [ '/v1/q602autoperception/:id' ]
      methods: [ "PUT", "PATCH" ]
      scopes: [ 'perceptionquest:update' ]

    - host: '*'
      paths: [ '/v1/q602autoperception/:id' ]
      methods: [ "DELETE" ]
      scopes: [ 'perceptionquest:delete' ]

    - host: '*'
      paths: [ '/v1/q602autoperception' ]
      methods: [ "POST" ]
      scopes: [ 'perceptionquest:create' ]

    - host: '*'
      paths: [ '/v1/q602autoperception' ]
      methods: [ "PATCH" ]
      scopes: [ 'perceptionquest:update' ]

    ### QFOODTRACKING ###
    - host: '*'
      paths:
        - '/v1/qfoodtrackings'
        - '/v1/qfoodtrackings/:id'
        - '/v1/qfoodtrackings/count'
      methods: [ "GET" ]
      scopes: [ 'foodtracking:read' ]

    - host: '*'
      paths: [ '/v1/qfoodtrackings/:id' ]
      methods: [ "PUT", "PATCH" ]
      scopes: [ 'foodtracking:update' ]

    - host: '*'
      paths: [ '/v1/qfoodtrackings/:id' ]
      methods: [ "DELETE" ]
      scopes: [ 'foodtracking:delete' ]

    - host: '*'
      paths: [ '/v1/qfoodtrackings' ]
      methods: [ "POST" ]
      scopes: [ 'foodtracking:create' ]

    - host: '*'
      paths: [ '/v1/qfoodtrackings' ]
      methods: [ "PATCH" ]
      scopes: [ 'foodtracking:update' ]

  ## GAMIFICATION ENDPOINTS ##
  gamificationPrivateAPI:
    ### AGENT_REPORT ###
    - host: '*'
      paths:
        - '/v1/agentreports'
        - '/v1/agentreports/:id'
        - '/v1/agentreports/count'
      methods: [ 'GET' ]
      scopes: [ 'gamificationprofile:read' ]

    - host: '*'
      paths: [ '/v1/agentreports/:id' ]
      methods: [ "PUT", "PATCH" ]
      scopes: [ 'gamificationprofile:update' ]

    - host: '*'
      paths: [ '/v1/agentreports/:id' ]
      methods: [ "DELETE" ]
      scopes: [ 'gamificationprofile:delete' ]

    - host: '*'
      paths: [ '/v1/agentreports' ]
      methods: [ "POST" ]
      scopes: [ 'gamificationprofile:create' ]

    - host: '*'
      paths: [ '/v1/agentreports' ]
      methods: [ "PATCH" ]
      scopes: [ 'gamificationprofile:update' ]

    ### BADGE ###
    - host: '*'
      paths:
        - '/v1/badges'
        - '/v1/badges/:id'
        - '/v1/badges/count'
      methods: [ 'GET' ]
      scopes: [ 'gamificationprofile:read' ]

    - host: '*'
      paths: [ '/v1/badges/:id' ]
      methods: [ "PUT", "PATCH" ]
      scopes: [ 'gamificationprofile:update' ]

    - host: '*'
      paths: [ '/v1/badges/:id' ]
      methods: [ "DELETE" ]
      scopes: [ 'gamificationprofile:delete' ]

    - host: '*'
      paths: [ '/v1/badges' ]
      methods: [ "POST" ]
      scopes: [ 'gamificationprofile:create' ]

    - host: '*'
      paths: [ '/v1/badges' ]
      methods: [ "PATCH" ]
      scopes: [ 'gamificationprofile:update' ]

    ### CUSTOMIZATION ITEM ###
    - host: '*'
      paths:
        - '/v1/customizationitems'
        - '/v1/customizationitems/:id'
        - '/v1/customizationitems/count'
      methods: [ 'GET' ]
      scopes: [ 'gamificationprofile:read' ]

    - host: '*'
      paths: [ '/v1/customizationitems/:id' ]
      methods: [ "PUT", "PATCH" ]
      scopes: [ 'gamificationprofile:update' ]

    - host: '*'
      paths: [ '/v1/customizationitems/:id' ]
      methods: [ "DELETE" ]
      scopes: [ 'gamificationprofile:delete' ]

    - host: '*'
      paths: [ '/v1/customizationitems' ]
      methods: [ "POST" ]
      scopes: [ 'gamificationprofile:create' ]

    - host: '*'
      paths: [ '/v1/customizationitems' ]
      methods: [ "PATCH" ]
      scopes: [ 'gamificationprofile:update' ]

    ### GAMIFICATION PROFILE ###
    - host: '*'
      paths:
        - '/v1/gamificationprofiles'
        - '/v1/gamificationprofiles/:id'
        - '/v1/gamificationprofiles/count'
      methods: [ 'GET' ]
      scopes: [ 'gamificationprofile:read' ]

    - host: '*'
      paths: [ '/v1/gamificationprofiles/:id' ]
      methods: [ "PUT", "PATCH" ]
      scopes: [ 'gamificationprofile:update' ]

    - host: '*'
      paths: [ '/v1/gamificationprofiles/:id' ]
      methods: [ "DELETE" ]
      scopes: [ 'gamificationprofile:delete' ]

    - host: '*'
      paths: [ '/v1/gamificationprofiles' ]
      methods: [ "POST" ]
      scopes: [ 'gamificationprofile:create' ]

    - host: '*'
      paths: [ '/v1/gamificationprofiles' ]
      methods: [ "PATCH" ]
      scopes: [ 'gamificationprofile:update' ]

    ### QUESTION ###
    - host: '*'
      paths:
        - '/v1/questions'
        - '/v1/questions/:id'
        - '/v1/questions/count'
      methods: [ "GET" ]
      scopes: [ 'gamificationprofile:read' ]

    - host: '*'
      paths: [ '/v1/questions/:id' ]
      methods: [ "PUT", "PATCH" ]
      scopes: [ 'gamificationprofile:update' ]

    - host: '*'
      paths: [ '/v1/questions/:id' ]
      methods: [ "DELETE" ]
      scopes: [ 'gamificationprofile:delete' ]

    - host: '*'
      paths: [ '/v1/questions' ]
      methods: [ "POST" ]
      scopes: [ 'gamificationprofile:create' ]

    - host: '*'
      paths: [ '/v1/questions' ]
      methods: [ "PATCH" ]
      scopes: [ 'gamificationprofile:update' ]

    ### MISSION ###
    - host: '*'
      paths:
        - '/v1/missions'
        - '/v1/missions/:id'
        - '/v1/missions/count'
      methods: [ 'GET' ]
      scopes: [ 'missions:read' ]

    - host: '*'
      paths: [ '/v1/missions/:id' ]
      methods: [ "PUT", "PATCH" ]
      scopes: [ 'missions:update' ]

    - host: '*'
      paths: [ '/v1/missions/:id' ]
      methods: [ "DELETE" ]
      scopes: [ 'missions:delete' ]

    - host: '*'
      paths: [ '/v1/missions' ]
      methods: [ "POST" ]
      scopes: [ 'missions:create' ]

    - host: '*'
      paths: [ '/v1/missions' ]
      methods: [ "PATCH" ]
      scopes: [ 'missions:update' ]

  ## MISSIONS ENDPOINTS ##
  missionsPrivateAPI:
    - host: '*'
      paths:
        - '/v1/observations/update-progress/:missionId' ### MISSION SELECTION ###
        - '/v1/observations/activate-mission/:missionId' ### MISSION SELECTION ###
        - '/v1/observations/complete-mission/:missionId' ### MISSION SELECTION ###
        - '/v1/observations/answer-question/:childId' ### MISSION SELECTION ###
        - '/v1/observations/answer-questionnaire/:childId' ### MISSION SELECTION ###
        - '/v1/robot-result' ### ROBOT ###
        - '/v1/robot-result/food-recognition' ### ROBOT ###
        - '/v1/baseline/baseline-questionnaire' ### BASELINE
        - '/v1/educator-missions/' ### EDUCATOR MISSIONS ###
        - '/v1/educator-missions/activate' ### EDUCATOR MISSIONS ###
        - '/v1/educator-missions/validate' ### EDUCATOR MISSIONS ###
        - '/v1/educator-missions/assign' ### EDUCATOR MISSIONS ###
      methods: [ "POST" ]
      scopes: [ 'missions:create' ]

    - host: '*'
      paths:
        - '/v1/observations/observations-severities/:childId' ### MISSION SELECTION ###
        - '/v1/observations/analyze-results/:childId' ### MISSION SELECTION ###
        - '/v1/observations/get-completed-missions/:childId' ### MISSION SELECTION ###
        - '/v1/observations/get-active-missions/:childId' ### MISSION SELECTION ###
        - '/v1/observations/get-all-missions/:childId' ### MISSION SELECTION ###
        - '/v1/observations/get-stratification/:childId' ### MISSION SELECTION ###
        - '/v1/observations/get-questionnaires'  ### DSS ###
        - '/v1/observations/get-week-questionnaires/:childId'  ### DSS ###
        - '/v1/robot-result/food-recognition/:childId' ### ROBOT ###
        - '/v1/robot-result/mission/:childId' ### ROBOT ###
        - '/v1/educator-missions/' ### EDUCATOR MISSIONS ###
        - '/v1/educator-missions/:missionId' ### EDUCATOR MISSIONS ###
        - '/v1/educator-missions/active/:childId' ### EDUCATOR MISSIONS ###
        - '/v1/educator-missions/completed/:childId' ### EDUCATOR MISSIONS ###
        - '/v1/educator-missions/assign/:childId' ### EDUCATOR MISSIONS ###
      methods: [ "GET" ]
      scopes: [ 'missions:read' ]

    - host: '*'
      paths:
        - '/v1/educator-missions/:missionId' ### EDUCATOR MISSIONS ###
      methods: [ "PUT" ]
      scopes: [ 'missions:update' ]

    - host: '*'
      paths:
        - '/v1/educator-missions/:missionId' ### EDUCATOR MISSIONS ###
      methods: [ "DELETE" ]
      scopes: [ 'missions:delete' ]

  ## FOOD HABITS ENDPOINTS ##
  foodPrivateApi:
    - host: '*'
      paths:
        - '/v1/foodqs'
        - '/v1/foodqs/:id'
        - '/v1/foodqs/count'
      methods: [ "GET" ]
      scopes: [ 'foodhabitsquest:read' ]

    - host: '*'
      paths: [ '/v1/foodqs/:id' ]
      methods: [ "PUT", "PATCH" ]
      scopes: [ 'foodhabitsquest:update' ]

    - host: '*'
      paths: [ '/v1/foodqs/:id' ]
      methods: [ "DELETE" ]
      scopes: [ 'foodhabitsquest:delete' ]

    - host: '*'
      paths: [ '/v1/foodqs' ]
      methods: [ "POST" ]
      scopes: [ 'foodhabitsquest:create' ]

    - host: '*'
      paths: [ '/v1/foodqs' ]
      methods: [ "PATCH" ]
      scopes: [ 'foodhabitsquest:update' ]

  ## NOTIFICATION ENDPOINTS ##
  notificationsPrivateAPI:
    ### NOTIFICATION ###
    - host: '*'
      paths:
        - '/v1/notifications/user/:id'
      methods: [ 'POST' ]
      scopes: [ 'notifications:create' ]

    - host: '*'
      paths:
        - '/v1/notifications/pendingnotification/:id'
      methods: [ 'GET' ]
      scopes: [ 'notifications:read' ]

    - host: '*'
      paths:
        - '/v1/notifications/deletetoken/:id'
      methods: [ 'PATCH' ]
      scopes: [ 'notifications:delete' ]

  ## VAULT ##
  vault:
    host: ${VAULT_HOSTNAME:-vault.localhost}

  ## RABBIT MANAGEMENT ##
  rabbit:
    host: ${RABBIT_MGT_HOSTNAME:-rabbit.localhost}

  ## MONITOR/GRAFANA ##
  monitor:
    host: ${MONITOR_HOSTNAME:-monitor.localhost}

  ## PORTAINER MANAGEMENT ##
  manager:
    host: ${MANAGER_HOSTNAME:-monitor.localhost}

####### SERVICE ENDPOINTS DEFINITIONS ########
serviceEndpoints:
  accountService:
    url: '${ACCOUNT_SERVICE:-https://localhost:3001}'
  activityService:
    url: '${IOT_TRACKING_SERVICE:-https://localhost:4001}'
  dsAgentService:
    url: '${DS_AGENT_SERVICE:-https://localhost:5001}'
  questionnaireService:
    url: '${QUESTIONNAIRE_SERVICE:-https://localhost:6001}'
  gamificationService:
    url: '${GAMIFICATION_SERVICE:-https://localhost:7001}'
  missionsService:
    url: '${MISSIONS_SERVICE:-https://localhost:8001}'
  foodService:
    url: '${FOOD_SERVICE:-https://localhost:9001}'
  notificationService:
    url: '${NOTIFICATION_SERVICE:-https://localhost:10001}'
  vaultService:
    url: '${VAULT_SERVICE:-https://localhost:8200}'
  rabbitManagementService:
    url: '${RABBIT_MGT_SERVICE:-https://localhost:15671}'
  monitorService:
    url: '${MONITOR_SERVICE:-https://localhost:3200}'
  managerService:
    url: '${MANAGER_SERVICE:-https://localhost:9000}'

####### POLICIES USED IN PIPELINES DEFINITION ########
policies:
  - log
  - proxy
  - rate-limit
  - jwtScopes-policy
  - jwt-policy
  - auth-policy
  - body-parser-policy
  - delete-user-policy
  - request-transformer
  - account-authorization
  - iot-tracking-authorization
  - ds-agent-authorization
  - tls-policy
  - iot-device-pki
  - terminate
  - iot-device-authorization

####### PIPELINES DEFINITION ########
#### Pipeline no manage data coming from ACCOUNT PRIVATE and PUBLIC APIs ####
pipelines:
  accountPublicPipeline:
    apiEndpoints: [ 'accountPublicApi' ]
    policies:
      - log: &log
          action:
            message: ${req.connection.remoteAddress} - "${req.method} ${req.originalUrl} HTTP/${req.httpVersion}" - "${req.headers['user-agent']}"
      - body-parser-policy:
      - auth-policy:
          - condition:
              name: 'regex-path-method'
              regexPath: '^(\/v1\/auth\/{0,1})$'
              method: 'POST'
            action:
              urlAuthService: ${ACCOUNT_SERVICE:-https://localhost:3001}/v1/auth
              secretOrPublicKeyFile: ${JWT_PUBLIC_KEY_PATH:-./.certs/jwt.pem}
              issuer: ${ISSUER:-ocariot}
      - proxy:
          - action: &proxy
              prependPath: true
              ignorePath: false
              stripPath: false
              changeOrigin: true
              timeout: 10000
              secure: false
              serviceEndpoint: accountService

  devicePipeline:
    apiEndpoints: [ 'devicePrivateApi' ]
    policies:
      - log: *log
      - body-parser-policy:
      - jwt-policy: &jwt
          - action:
              secretOrPublicKeyFile: ${JWT_PUBLIC_KEY_PATH:-./.certs/jwt.pem}
              issuer: ${ISSUER:-ocariot}
      - jwtScopes-policy:
      - iot-tracking-authorization: &iot-tracking-authorization
          action:
            accountServiceUrlBase: ${ACCOUNT_SERVICE:-https://localhost:3001}
      - iot-device-pki:
          - action:
              iotTrackingUrlBase: ${IOT_TRACKING_SERVICE:-https://localhost:4001}
              vaultServiceUrlBase: ${VAULT_SERVICE:-'https://localhost:8200'}
              vaultServiceToken: ${VAULT_ACCESS_TOKEN:-''}
      - proxy:
          - action:
              <<: *proxy
              serviceEndpoint: activityService

  iotCertRenewPipeline:
    apiEndpoints: [ 'iotRenewCertPrivateApi' ]
    policies:
      - log: *log
      - body-parser-policy:
      - tls-policy:
      - iot-device-pki:
          - action:
              iotTrackingUrlBase: ${IOT_TRACKING_SERVICE:-https://localhost:4001}
              vaultServiceUrlBase: ${VAULT_SERVICE:-'https://localhost:8200'}
              vaultServiceToken: ${VAULT_ACCESS_TOKEN:-''}

  iotPipeline:
    apiEndpoints: [ 'iotPrivateApi' ]
    policies:
      - log: *log
      - body-parser-policy:
      - tls-policy:
      - iot-device-authorization:
          action:
            accountServiceUrlBase: ${ACCOUNT_SERVICE:-https://localhost:3001}
            iotServiceUrlBase: ${IOT_TRACKING_SERVICE:-https://localhost:4001}
      - proxy:
          - action:
              <<: *proxy
              serviceEndpoint: activityService

  accountPrivatePipeline:
    apiEndpoints: [ 'accountPrivateApi' ]
    policies:
      - log: *log
      - body-parser-policy:
      - jwt-policy: *jwt
      - jwtScopes-policy:
      - account-authorization:
          action:
            accountServiceUrlBase: ${ACCOUNT_SERVICE:-https://localhost:3001}
      - delete-user-policy:
          - condition:
              name: 'regex-path-method'
              regexPath: '^((\/v1\/users\/)[^\W_]{24}\/{0,1})$'
              method: 'DELETE'
            action:
              urlDeleteService: ${ACCOUNT_SERVICE:-https://localhost:3001}/v1/users
      - request-transformer: &req-transformer
          - action:
              headers:
                add:
                  Ocariot-User-Id: req.user.sub
                  Ocariot-User-type: req.user.sub_type
                  Ocariot-User-Scope: req.user.scope
      - proxy:
          - action:
              <<: *proxy
              serviceEndpoint: accountService

  #### Pipelines to manage data coming from ACTIVITY PRIVATE and PUBLIC APIs ####
  activityPrivatePipeline:
    apiEndpoints: [ 'activityPrivateApi', 'environmentPrivateAPI' ]
    policies:
      - log: *log
      - body-parser-policy:
      - jwt-policy: *jwt
      - jwtScopes-policy:
      - iot-tracking-authorization: *iot-tracking-authorization
      - request-transformer: *req-transformer
      - proxy:
          - action:
              <<: *proxy
              serviceEndpoint: activityService

  #### Pipelines to manage data coming from DATA SYNC AGENT PRIVATE and PUBLIC APIs ####
  dsAgentPrivatePipeline:
    apiEndpoints: [ 'dsAgentPrivateApi' ]
    policies:
      - log: *log
      - body-parser-policy:
      - jwt-policy: *jwt
      - jwtScopes-policy:
      - ds-agent-authorization: &ds-agent-authorization
          action:
            accountServiceUrlBase: ${ACCOUNT_SERVICE:-https://localhost:3001}
      - request-transformer: *req-transformer
      - proxy:
          - action:
              <<: *proxy
              serviceEndpoint: dsAgentService

  dsAgentFitbitSyncPrivatePipeline:
    apiEndpoints: [ 'dsAgentFitbitSyncPrivateApi' ]
    policies:
      - log: *log
      - body-parser-policy:
      - jwt-policy: *jwt
      - jwtScopes-policy:
      - ds-agent-authorization: *ds-agent-authorization
      - request-transformer: *req-transformer
      - rate-limit:
          - action:
              max: 10
              windowMs: 3600000
              rateLimitBy: "${req.hostname} ${req.params.user_id}"
              statusCode: 429
              message: 'Synchronization limit per hour exceeded for child. Please try again later...'
              headers: true
              delayMs: 0
      - proxy:
          - action:
              <<: *proxy
              serviceEndpoint: dsAgentService

  #### Pipelines to manage data coming from QUESTIONNAIRES PRIVATE and PUBLIC APIs ####
  questionnairesPrivatePipeline:
    apiEndpoints: [ 'questionnairesPrivateAPI' ]
    policies:
      - log: *log
      - body-parser-policy:
      - jwt-policy: *jwt
      - jwtScopes-policy:
      - request-transformer: *req-transformer
      - proxy:
          - action:
              <<: *proxy
              serviceEndpoint: questionnaireService

  #### Pipelines to manage data coming from GAMIFICATION PRIVATE and PUBLIC APIs ####
  gamificationPrivatePipeline:
    apiEndpoints: [ 'gamificationPrivateAPI' ]
    policies:
      - log: *log
      - body-parser-policy:
      - jwt-policy: *jwt
      - jwtScopes-policy:
      - request-transformer: *req-transformer
      - proxy:
          - action:
              <<: *proxy
              serviceEndpoint: gamificationService

  #### Pipelines to manage data coming from MISSIONS PRIVATE and PUBLIC APIs ####
  missionsPrivatePipeline:
    apiEndpoints: [ 'missionsPrivateAPI' ]
    policies:
      - log: *log
      - body-parser-policy:
      - jwt-policy: *jwt
      - jwtScopes-policy:
      - request-transformer: *req-transformer
      - proxy:
          - action:
              <<: *proxy
              serviceEndpoint: missionsService

  #### Pipelines to manage data coming from FOOD HABITS PRIVATE and PUBLIC APIs ####
  foodPrivatePipeline:
    apiEndpoints: [ 'foodPrivateApi' ]
    policies:
      - log: *log
      - body-parser-policy:
      - jwt-policy: *jwt
      - jwtScopes-policy:
      - request-transformer: *req-transformer
      - proxy:
          - action:
              <<: *proxy
              serviceEndpoint: foodService

  #### Pipelines to manage data coming from NOTIFICATION PRIVATE and PUBLIC APIs ####
  notificationPrivatePipeline:
    apiEndpoints: [ 'notificationsPrivateAPI' ]
    policies:
      - log: *log
      - body-parser-policy:
      - jwt-policy: *jwt
      - jwtScopes-policy:
      - request-transformer: *req-transformer
      - proxy:
          - action:
              <<: *proxy
              serviceEndpoint: notificationService

  #### Pipelines from VAULT ####
  vaultPipeline:
    apiEndpoints: [ 'vault' ]
    policies:
      - log: *log
      - proxy:
          - action:
              <<: *proxy
              serviceEndpoint: vaultService

  #### Pipelines from RABBIT MANAGEMENT ####
  rabbitPipeline:
    apiEndpoints: [ 'rabbit' ]
    policies:
      - log: *log
      - proxy:
          - action:
              <<: *proxy
              serviceEndpoint: rabbitManagementService

  #### Pipelines from MONITOR/GRAFANA ####
  monitorPipeline:
    apiEndpoints: [ 'monitor' ]
    policies:
      - log: *log
      - proxy:
          - action:
              <<: *proxy
              serviceEndpoint: monitorService

  #### Pipelines from RABBIT MANAGEMENT ####
  managerPipeline:
    apiEndpoints: [ 'manager' ]
    policies:
      - log: *log
      - proxy:
          - action:
              <<: *proxy
              serviceEndpoint: managerService
